AWSTemplateFormatVersion: '2010-09-09'
Description: >
  (%%SOLUTION_ID%%) - %%SOLUTION_NAME%% %%VERSION%% - publisher and subscriber shared resources for asset exchange.

Outputs:

  SubscriberOnboardingSummary:
    Description: Configuration information for subscriber.
    Value:
      Fn::Join:
        - ' '
        - - Fn::Sub: PUBLISHER_NAME=${PublisherName}
          - Fn::Sub: SUBSCRIBER_NAME=${SubscriberName}
          - Fn::Sub: AWS_REGION=${AWS::Region}
          - Fn::Sub: BUCKET_NAME=${ExchangeBucket}
          - Fn::Join:
            - '='
            - - SUBSCRIBER_ROLE
              - Fn::ImportValue:
                  Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-role

  ConsoleUrl:
    Description: Use this url to directly access the shared bucket.
    Value:
      Fn::Sub: https://s3.console.aws.amazon.com/s3/buckets/${ExchangeBucket}/?region=${AWS::Region}&tab=overview

  PublisherOnboardingSummary:
    Description: Configuration information for publisher.
    Value:
      Fn::Join:
        - ' '
        - - Fn::Sub: PUBLISHER_NAME=${PublisherName}
          - Fn::Sub: SUBSCRIBER_NAME=${SubscriberName}
          - Fn::Sub: AWS_REGION=${AWS::Region}
          - Fn::Sub: BUCKET_NAME=${ExchangeBucket}
          - Fn::Sub: KMS_KEY_ARN=${CMK.Arn}
          - Fn::Sub: EVENT_SOURCE_NAME=mxc-${AWS::Region}-${Environment}-publisher
          - Fn::Join:
            - ''
            - - SUBSCRIBER_CANONICAL_USER_ID=
              - Fn::ImportValue:
                  Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-canonicalid
          - Fn::Join:
            - '='
            - - PUBLISHER_ROLE
              - Fn::ImportValue:
                  Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-role

Metadata:

  License:
    Description: |
        Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

        Licensed under the Apache License, Version 2.0 (the "License").
        You may not use this file except in compliance with the License.
        You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Deployment Configuration"
        Parameters:
          - Environment
      -
        Label:
          default: "Agreement Configuration"
        Parameters:
          - PublisherName
          - SubscriberName


Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev

  PublisherName:
    Type: String
    Description: The name of the publisher, case sensetive, as registerd in this Media Exchange deployment.

  SubscriberName:
    Type: String
    Description: The name of the subscriber, case sensetive, as registerd in this Media Exchange deployment.


Resources:


  ExchangeBucket:
    Type: AWS::S3::Bucket

    Properties:

      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

      VersioningConfiguration:
        Status: Enabled

      LoggingConfiguration:
        LogFilePrefix:
          Ref: PublisherName
        DestinationBucketName:
          Fn::ImportValue:
            Fn::Sub: mxc-${AWS::Region}-${Environment}-logs

      # default encryption does not go well with x-account CMKs
      # BucketEncryption:
      #   ServerSideEncryptionConfiguration:
      #     -
      #       ServerSideEncryptionByDefault:
      #         SSEAlgorithm: 'aws:kms'
      #         KMSMasterKeyID:
      #           Ref: CMK

      #Expire objects after the lifecycle period
      LifecycleConfiguration:
        Rules:
          -
            Id: Expire
            Status: Enabled
            ExpirationInDays: 10

          -
            Id: AutoRemove
            Status: Enabled
            NoncurrentVersionExpirationInDays: 10

          -
            Id: CleanupIncompleteUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 2

      NotificationConfiguration:
        LambdaConfigurations:
          -
            Event: 's3:ObjectCreated:*'
            Function:
              Fn::Join:
                - ':'
                - - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function
                  - Fn::ImportValue:
                      Fn::Sub: mxc-${AWS::Region}-${Environment}-s3eventfn

    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    DependsOn: LambdaPermissionForS3Bucket


  #bucket policy
  ExchangeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ExchangeBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          # TLS only
          -
            Sid: "RequireTLS"
            Action:
              - "s3:*"
            Effect: "Deny"
            Resource:
              - Fn::Sub: arn:aws:s3:::${ExchangeBucket}/*
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport: false

          # # require KMS for put
          -
            Sid: "DenyIncorrectEncryptionHeader"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource:
              - Fn::Sub: arn:aws:s3:::${ExchangeBucket}/*
            Principal: "*"
            Condition:
              StringNotEquals:
                s3:x-amz-server-side-encryption: aws:kms

          ## Need to specify the KMS Key Id
          -
            Sid: "DenyNoCMKHeader"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource:
              - Fn::Sub: arn:aws:s3:::${ExchangeBucket}/*
            Principal: "*"
            Condition:
              'Null':
                s3:x-amz-server-side-encryption-aws-kms-key-id: true

          -
            Sid: "AllowCopyOpPublisher"
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetObjectAcl
              - s3:GetObjectVersionAcl
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:AbortMultipartUpload
              - s3:ListMultipartUploadParts
              - s3:DeleteObject
              - s3:DeleteObjectTagging
              - s3:DeleteObjectVersion
              - s3:DeleteObjectVersionTagging
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeBucket}/*
            Principal:
              AWS:
                - Fn::ImportValue:
                    Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-role

          # read permissions are granted by the ACLs. In addition we want the tags to be private.
          # -
          #   Sid: "AllowCopyOpSubscriber"
          #   Effect: Allow
          #   Action:
          #     - s3:GetObject
          #     - s3:GetObjectVersion
          #     - s3:GetObjectAcl
          #     - s3:GetObjectVersionAcl
          #     - s3:GetObjectTagging
          #     - s3:GetObjectVersionTagging
          #   Resource:
          #     Fn::Sub: arn:aws:s3:::${ExchangeBucket}/*
          #   Principal:
          #     AWS:
          #       - Fn::ImportValue:
          #           Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-role

          -
            Sid: "AllowBasicConsole"
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeBucket}
            Principal:
              AWS:
                - Fn::ImportValue:
                    Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-role
                - Fn::ImportValue:
                    Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-role

  LambdaPermissionForS3Bucket:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Fn::ImportValue:
          Fn::Sub: mxc-${AWS::Region}-${Environment}-s3eventfn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId

  CMK:
    Type: AWS::KMS::Key
    Properties:
      Description: Symetric Key for Encrypting Objects in Media Exchange
      Enabled: true
      EnableKeyRotation: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Id: node-key-policy
        Statement:
          -
            Sid: KeyManagement
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:TagResource
              - kms:UntagResource
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          -
            Sid: SubscriberAccess
            Effect: Allow
            Principal:
              AWS:
                Fn::ImportValue:
                  Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-role

            Action:
              - kms:Decrypt
              - kms:DescribeKey
            Resource: '*'
          -
            Sid: PublisherAccess
            Effect: Allow
            Principal:
              AWS:
                Fn::ImportValue:
                  Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-role
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
              - kms:ListAliases
            Resource: '*'


  AutoNotifySubscriberRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Notify Content Published"
      EventPattern:
        source:
          - Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher
        detail-type:
          - Fn::Sub: 'source=s3:ObjectCreated:*,notify=auto,bucket=${ExchangeBucket}'
      State: "ENABLED"
      Targets:
        -
          Id: "SNSEvent"
          InputPath: $.detail
          Arn:
            Fn::ImportValue:
              Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-notificationtopic
        # -
        #   Id: "XAccount"
        #   Arn:
        #     Fn::Join:
        #       - ':'
        #       - - arn:aws:events
        #         - Ref: AWS::Region
        #         - Fn::ImportValue:
        #             Fn::Sub: mxc-${AWS::Region}-${Environment}-subscriber-${SubscriberName}-accountid
        #         - event-bus/default
