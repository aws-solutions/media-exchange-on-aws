AWSTemplateFormatVersion: '2010-09-09'
Description: >
  (SO0133) - __SOLUTION_NAME__ __VERSION__ - setup a publisher

Outputs:

  LogBucketName:
    Description: Logging Bucket Name
    Value:
      Ref: ExchangeLogBucket
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-logs

  PublisherRole:
    Description: Publisher's S3 Access role
    Value:
      Fn::If:
        - HasRole
        - Ref: PublisherRole
        - Fn::Sub: arn:${AWS::Partition}:iam::${PublisherAccountId}:root
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-role

  PublisherNotificationsTopic:
    Description: Publisher's notifications topic name
    Value:
      Ref: NotificationTopic
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-notificationtopic

  PublisherNotificationsDLQ:
    Description: Subscriber's notifications dead letter queue Arn
    Value:
      Fn::GetAtt: DLQ.Arn
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-publisher-${PublisherName}-notificationdlq

Metadata:

  License:
    Description: |
        Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

        Licensed under the Apache License, Version 2.0 (the "License").
        You may not use this file except in compliance with the License.
        You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Deployment Configuration"
        Parameters:
          - Environment
      -
        Label:
          default: "Publisher Configuration"
        Parameters:
          - PublisherName
          - PublisherAccountId
          - PublisherRole

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev
    AllowedPattern: "[A-Za-z0-9]+"
    ConstraintDescription: Malformed input-Parameter Environment must only contain uppercase and lowercase letters and numbers
    MaxLength: 10
    MinLength: 2

  PublisherName:
    Type: String
    Description: Name of the publisher
    AllowedPattern: "[A-Za-z0-9-]+"
    ConstraintDescription: Malformed input-Parameter PublisherName must only contain uppercase and lowercase letters and numbers
    MaxLength: 64
    MinLength: 3

  PublisherAccountId:
    Type: String
    Description: The AWS accountId of the publisher. This parameter is ignored if you specify PublisherRole.
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: Malformed input-Parameter PublisherAccountId must be a 12 digit number

  PublisherRole:
    Description: Publisher's Role. Defaults to arn:aws:iam::$PublisherAccountId:root.
    Type: String
    AllowedPattern: "[A-Za-z0-9:/-]*"
    Default: ''

Conditions:
  HasRole:
    Fn::Not:
      - Fn::Equals:
        - ""
        - Ref: PublisherRole


Resources:

  #bucket for storing S3 Access Logs
  ExchangeLogBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "(W35) S3 Bucket should have access logging configured: This is the logging bucket."
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          -
            Id: Expire
            Status: Enabled
            Transitions:
              -
                StorageClass: GLACIER
                TransitionInDays: 90


  ExchangeLogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ExchangeLogBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          # TLS only
          -
            Sid: "RequireTLS"
            Action:
              - "s3:*"
            Effect: "Deny"
            Resource:
              - Fn::Sub: arn:${AWS::Partition}:s3:::${ExchangeLogBucket}/*
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport: false

          -
            Sid: "AllowGetOpPublisher"
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetObjectAcl
              - s3:GetObjectVersionAcl
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
            Resource:
              Fn::Sub: arn:${AWS::Partition}:s3:::${ExchangeLogBucket}/*
            Principal:
              AWS:
                - Fn::If:
                  - HasRole
                  - Ref: PublisherRole
                  - Fn::Sub: arn:${AWS::Partition}:iam::${PublisherAccountId}:root
          -
            Sid: "AllowBasicConsole"
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              Fn::Sub: arn:${AWS::Partition}:s3:::${ExchangeLogBucket}
            Principal:
              AWS:
                - Fn::If:
                  - HasRole
                  - Ref: PublisherRole
                  - Fn::Sub: arn:${AWS::Partition}:iam::${PublisherAccountId}:root


  PutEventsPermission:
    Type: AWS::Events::EventBusPolicy
    Properties:
      Action:
        events:PutEvents
      Principal:
        Ref: PublisherAccountId
      StatementId:
        Fn::Sub: "${AWS::StackName}Events"


  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: SNS Topic for MediaExchange Publisher Notifications
      KmsMasterKeyId:
        Ref: CMK

  CMK:
    Type: AWS::KMS::Key
    Properties:
      Description: Symetric Key for Encrypting Messages in Media Exchange
      Enabled: true
      EnableKeyRotation: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Id: node-key-policy
        Statement:
          -
            Sid: KeyManagement
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:TagResource
              - kms:UntagResource
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'

          -
            Sid: "Allow access for Key User (SNS Service Principal)"
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'

          -
            Sid: "Allow access for Key User (Events Service Principal)"
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'

          -
            Sid: "Allow access for Key User (x-account permissions for subscriber)"
            Effect: Allow
            Principal:
              AWS:
                Ref: PublisherAccountId
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'


  EventTopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: Allow_Publish_Events
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sns:Publish
            Resource:
              Ref: NotificationTopic

          -
            Sid: Allow_X_Account_Subscribe
            Effect: Allow
            Principal:
              AWS:
                Ref: PublisherAccountId
            Action:
              - sns:Subscribe
            Resource:
              Ref: NotificationTopic
      Topics:
        -
          Ref: NotificationTopic

  # also send the messages to a DLQ for retry
  DLQ:
    Type: 'AWS::SQS::Queue'
    Properties:
      KmsMasterKeyId:
        Ref: CMK
      KmsDataKeyReusePeriodSeconds:  86400
      MessageRetentionPeriod: 1209600

  DLQQPolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      Queues:
        - Ref: DLQ
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource:
              Fn::GetAtt: DLQ.Arn
