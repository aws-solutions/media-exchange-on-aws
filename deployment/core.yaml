AWSTemplateFormatVersion: '2010-09-09'
Description: >
  (%%SOLUTION_ID%%) - %%SOLUTION_NAME%% %%VERSION%% - common resources

Metadata:

  License:
    Description: |
        Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

        Licensed under the Apache License, Version 2.0 (the "License").
        You may not use this file except in compliance with the License.
        You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

  AWS::cloudformation::Interface:
    ParameterGroups:
      -
        Label:
          default: Deployment Configuration
        Parameters:
          - Environment

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev
    AllowedPattern: "[A-Za-z0-9]+"
    ConstraintDescription: Malformed input-Parameter Environment must only contain uppercase and lowercase letters and numbers
    MaxLength: 10
    MinLength: 2

Outputs:
  LogBucketName:
    Description: Logging Bucket Name
    Value:
      Ref: ExchangeLogBucket
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-logs

Resources:

  #bucket for storing S3 Access Logs
  ExchangeLogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'


  #bucket for storing cloudtrails
  ExchangeCloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              

  ExchangeCloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ExchangeCloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}
          -
            Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  ExchangeCloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365

  ExchangeCloudTrailLogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: Cloudtrail role for cloudwatch logs.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        -
          PolicyName: mxc-cw-ct
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                Resource:
                  Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ExchangeCloudTrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*
              -
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ExchangeCloudTrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*

  #cloudtrail for object read/write operations
  ObjectsTrail:
    DependsOn: ExchangeCloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: false
      S3BucketName:
        Ref: ExchangeCloudTrailBucket
      CloudWatchLogsLogGroupArn:
        Fn::GetAtt: ExchangeCloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt: ExchangeCloudTrailLogGroupRole.Arn
