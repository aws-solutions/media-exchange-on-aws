AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Cloudformation template setting up network for managed transfer.

Metadata:

  License:
    Description: |
      Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.

      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Deployment Configuration"
        Parameters:
          - Environment

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev

Outputs:
  VpcId:
    Description: VPC Id
    Value:
      Ref: VPC
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-vpcid

  SecurityGroup:
    Description: Security Group Id
    Value:
      Ref: SecurityGroup
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-sg


  Subnets:
    Description: Subnets in 3 different Availability Zone
    Value:
      Fn::Join:
        - ','
        - - Ref: SubnetOne
          - Ref: SubnetTwo
          - Ref: SubnetThree
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-subnets

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  # ECSAgentEndpoint:
  #   Type: AWS::EC2::VPCEndpoint
  #   Properties:
  #     SecurityGroupIds:
  #       - Ref: SecurityGroup
  #     ServiceName:
  #       Fn::Sub: com.amazonaws.${AWS::Region}.ecs-agent
  #     SubnetIds:
  #       - Ref: Subnet
  #     VpcEndpointType: Interface
  #     VpcId:
  #       Ref: VPC
  #
  # ECSTelemetryEndpoint:
  #   Type: AWS::EC2::VPCEndpoint
  #   Properties:
  #     SecurityGroupIds:
  #       - Ref: SecurityGroup
  #     ServiceName:
  #       Fn::Sub: com.amazonaws.${AWS::Region}.ecs-telemetry
  #     SubnetIds:
  #       - Ref: Subnet
  #     VpcEndpointType: Interface
  #     VpcId:
  #       Ref: VPC
  #
  # ECSEndpoint:
  #   Type: AWS::EC2::VPCEndpoint
  #   Properties:
  #     SecurityGroupIds:
  #       - Ref: SecurityGroup
  #     ServiceName:
  #       Fn::Sub: com.amazonaws.${AWS::Region}.ecs
  #     SubnetIds:
  #       - Ref: Subnet
  #     VpcEndpointType: Interface
  #     VpcId:
  #       Ref: VPC

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Ref: RouteTable
      ServiceName:
        Fn::Sub: com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      VpcId:
        Ref: VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the EC2 instances launched into the VPC by Batch
      VpcId:
        Ref: VPC

  SubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""

  SubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""

  SubnetThree:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC

  SubnetRouteTableAssociationOne:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetOne

  SubnetRouteTableAssociationTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetTwo

  SubnetRouteTableAssociationThree:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetThree
