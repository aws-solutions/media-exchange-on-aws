AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: > 
  Cloudformation template for media exchange store. 

Outputs:
  MediaExchangeStorage:
    Description: Media Exchange Store Bucket
    Value:
      Ref: Exchange
  
Parameters: 
  Environment: 
    Type: String
    Description: Deployment Environment Name
    Default: dev 
  DefaultExpirationPeriod: 
    Type: Number
    Description: Default expiration period in days, the object(s) will be removed after the expiration period
    Default: 15
    MinValue: 15

Resources:

  Exchange:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}
      
      #versioning is disabled
      VersioningConfiguration: 
        Status: Suspended

      # objects are encrypted with a CMK
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - 
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms 
      
      #Lock the object for the retaintion period. 
      # we use a bucket policy to deny deletes and modifications to the lifecycle policy
      # this is simplier than using an explicit object lock. 
     
      #Expire objects after the lifecycle period
      LifecycleConfiguration:
        Rules: 
          - 
            Id: Expiration
            Status: Enabled
            ExpirationInDays:
              Ref: DefaultExpirationPeriod
          - 
            Id: CleanupIncompleteUploads
            Status: Enabled
            AbortIncompleteMultipartUpload: 
              DaysAfterInitiation: 2
        
      #tagging?

    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  #bucket policy  
  ExchangeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: 
        Ref: Exchange
      PolicyDocument: 

        Statement:

          # # deny explicit deletes 
          # - 
          #   Sid: "DenyExplicitDeletes"
          #   Action: 
          #     - "s3:DeleteObject"
          #     - "s3:DeleteObjectVersion"
          #   Effect: "Deny"
          #   Resource: 
          #     Fn::Sub: arn:aws:s3:::mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}/*
          #   Principal: "*"

          # TLS only
          - 
            Sid: "RequireTLS"
            Action: "*"
            Effect: "Deny"
            Resource: 
              - Fn::Sub: arn:aws:s3:::mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}
              - Fn::Sub: arn:aws:s3:::mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}/*
            Principal: "*"
            Condition: 
              Bool: 
                aws:SecureTransport: false

          # require KMS for put
          - 
            Sid: "DenyIncorrectEncryptionHeader"
            Action: 
              - "s3:PutObject"
            Effect: "Deny"
            Resource: 
              Fn::Sub: arn:aws:s3:::mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}/*
            Principal: "*"
            Condition: 
              StringNotEquals: 
                s3:x-amz-server-side-encryption: aws:kms

    #bucket for storing cloudtrails
  ExchangeCloudTrailBucket:
    Type: AWS::S3::Bucket

  ExchangeCloudTrailBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: 
        Ref: ExchangeCloudTrailBucket
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: 
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}
          - 
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition: 
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

  #cloudwatch logs for exchange bucket 
  ExchangeObjectsTrailLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30

  ExchangeObjectsTrailLogRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
              - cloudtrail.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - 
          PolicyName: AllowCreateLogStreams
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - 
                Effect: Allow
                Action: 
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 
                  Fn::Sub: "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ExchangeObjectsTrailLog}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*"


  #cloudtrail for object read/write operations 
  ExchangeObjectsTrail:
    DependsOn:
      - ExchangeCloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties: 
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: false
      IsMultiRegionTrail: false
      EventSelectors: 
        - DataResources: 
            - Type: 'AWS::S3::Object'
              Values:
                - Fn::Sub: arn:aws:s3:::mxc-store-${Environment}-${AWS::Region}-${AWS::AccountId}/
          IncludeManagementEvents: false
          ReadWriteType: All
      S3BucketName: 
        Ref: ExchangeCloudTrailBucket
      CloudWatchLogsLogGroupArn: 
        Fn::GetAtt: ExchangeObjectsTrailLog.Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt: ExchangeObjectsTrailLogRole.Arn